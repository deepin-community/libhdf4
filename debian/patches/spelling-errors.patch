Description: Fix spelling errors.
 charachters   -> characters
 occured       -> occurred
 posible       -> possible
 ouput         -> output
 lenght        -> length
 treshold      -> threshold
 inadvertantly -> inadvertently
 syncronize    -> synchronize
 existant      -> existent
 converion     -> conversion
Author: Bas Couwenberg <sebastic@debian.org>

--- a/hdf/util/gif2hdf.c
+++ b/hdf/util/gif2hdf.c
@@ -57,7 +57,7 @@ char *argc[];
 
 	if (!(fpGif = fopen(GIFFileName,"rb"))) {
 		printf("Unable to open GIF file for reading.\n");
-		printf("Filename (including path) must be less than %d charachters in length\n",VSNAMELENMAX);
+		printf("Filename (including path) must be less than %d characters in length\n",VSNAMELENMAX);
 		exit(-1);
 	}
 
--- a/hdf/util/gifread.c
+++ b/hdf/util/gifread.c
@@ -79,8 +79,8 @@ BYTE *MemGif;
 **  Global Color Table (if any) from a GIF image file.  The information
 **  is stored in a GIFHEAD structure.
 **
-**  Returns: -1 if a FILE stream error occured during the read,
-**           otherwise 0 if no error occured.
+**  Returns: -1 if a FILE stream error occurred during the read,
+**           otherwise 0 if no error occurred.
 */
 int
 ReadGifHeader(GifHead, MemGif2)
@@ -133,7 +133,7 @@ BYTE    **MemGif2;       /* GIF image fi
         return(-1); 
 	*/
 
-    return(0);          /* No FILE stream error occured */
+    return(0);          /* No FILE stream error occurred */
 }
 
 
@@ -147,8 +147,8 @@ BYTE    **MemGif2;       /* GIF image fi
 **  Note that the ImageSeparator field value in the GIFIMAGEDESC
 **  structure is assigned by the function calling ReadGifImageDesc().
 **
-**  Returns: -1 if a FILE stream error occured during the read,
-**           otherwise 0 if no error occured.
+**  Returns: -1 if a FILE stream error occurred during the read,
+**           otherwise 0 if no error occurred.
 */
 int
 ReadGifImageDesc(GifImageDesc, MemGif2)
@@ -233,7 +233,7 @@ BYTE         **MemGif2;     /* GIF image
 	while (ch1);
 
 
-    return(0);          /* No FILE stream error occured */
+    return(0);          /* No FILE stream error occurred */
 }
 
 
@@ -243,8 +243,8 @@ BYTE         **MemGif2;     /* GIF image
 **  Note that the Introducer and Label field values in the GIFGRAPHICCONTROL
 **  structure are assigned by the function calling ReadGifGraphicControl().
 **
-**  Returns: -1 if a FILE stream error occured during the read,
-**           otherwise 0 if no error occured.
+**  Returns: -1 if a FILE stream error occurred during the read,
+**           otherwise 0 if no error occurred.
 */
 int
 ReadGifGraphicControl(GifGraphicControl, MemGif2)
@@ -257,7 +257,7 @@ BYTE              **MemGif2;          /*
 		GifGraphicControl->GCEDump[i] = *(*MemGif2)++;
 	}
 
-    return(0);          /* No FILE stream error occured */
+    return(0);          /* No FILE stream error occurred */
 }
 
 
@@ -267,8 +267,8 @@ BYTE              **MemGif2;          /*
 **  Note that the Introducer and Label field values in the GIFLPLAINTEXT
 **  structure are assigned by the function calling ReadGifPlainText().
 **
-**  Returns: -1 if a FILE stream error occured during the read,
-**           otherwise 0 if no error occured.
+**  Returns: -1 if a FILE stream error occurred during the read,
+**           otherwise 0 if no error occurred.
 */
 int
 ReadGifPlainText(GifPlainText, MemGif2)
@@ -293,7 +293,7 @@ BYTE         **MemGif2;       /* GIF ima
         return(-1);
 	*/
 
-    return(0);          /* No FILE stream error occured */
+    return(0);          /* No FILE stream error occurred */
 }
 
 
@@ -303,8 +303,8 @@ BYTE         **MemGif2;       /* GIF ima
 **  Note that the Introducer and Label field values in the GIFAPPLICATION
 **  structure are assigned by the function calling ReadGifApplication().
 **
-**  Returns: -1 if a FILE stream error occured during the read,
-**           otherwise 0 if no error occured.
+**  Returns: -1 if a FILE stream error occurred during the read,
+**           otherwise 0 if no error occurred.
 */
 int
 ReadGifApplication(GifApplication, MemGif2)
@@ -328,7 +328,7 @@ BYTE           **MemGif2;          /* GI
         return(-1);
 	*/
 
-    return(0);          /* No FILE stream error occured */
+    return(0);          /* No FILE stream error occurred */
 }
 
 
@@ -338,8 +338,8 @@ BYTE           **MemGif2;          /* GI
 **  Note that the Introducer and Label field values in the GIFCOMMENT
 **  structure are assigned by the function calling ReadGifComment().
 **
-**  Returns: -1 if a FILE stream error occured during the read,
-**           otherwise 0 if no error occured.
+**  Returns: -1 if a FILE stream error occurred during the read,
+**           otherwise 0 if no error occurred.
 */
 int
 ReadGifComment(GifComment, MemGif2)
@@ -353,7 +353,7 @@ BYTE       **MemGif2;      /* GIF image
 
     GifComment->Terminator = 0;
     
-    return(0);          /* No FILE stream error occured */
+    return(0);          /* No FILE stream error occurred */
 }
 
 
@@ -364,8 +364,8 @@ BYTE       **MemGif2;      /* GIF image
 **  A GIF "sub-block" is a single count byte followed by 1 to 255
 **  additional data bytes.
 **
-**  Returns: A NULL pointer if a memory allocation error occured,
-**           otherwise a valid pointer if no error occured.
+**  Returns: A NULL pointer if a memory allocation error occurred,
+**           otherwise a valid pointer if no error occurred.
 */
 BYTE *
 ReadDataSubBlocks(MemGif2 , DSize)
--- a/hdf/util/writehdf.c
+++ b/hdf/util/writehdf.c
@@ -143,14 +143,14 @@ char     *GIFFileName;
 
 		/* GRSetCompress */
 		if ((status = GRsetcompress(ri_id, comp_type, &c_info)) == -1) {
-			printf("Error occured while setting compression\n");
+			printf("Error occurred while setting compression\n");
 			printf("%s\n", HEstring(HEvalue(1)));
 			exit(-1);
 		}
 
 		/* Write the GR Image */
 		if ((status = GRwriteimage(ri_id, start, NULL, edges, (VOIDP)gifImageDesc.Image)) == -1) {
-			printf("Error occured while trying to write GR image\n");
+			printf("Error occurred while trying to write GR image\n");
 			printf("%s\n", HEstring(HEvalue(1)));
 			exit(-1);
 		}
--- a/release_notes/HISTORY.txt
+++ b/release_notes/HISTORY.txt
@@ -6426,7 +6426,7 @@ follow the instructions listed in:
      the "make" in some old systems does not support the 
      creation commands.)
    . A bug was found in the "mfhdf.h" file late in the testing
-     stage. The error occured in the CM5 parallel I/O 
+     stage. The error occurred in the CM5 parallel I/O 
      extension only. The fix is not included in the source
      release, but it is avalable in the binary release for 
      the CM5 version.  Please retrieve the fix there. 
--- a/hdf/util/he_disp.c
+++ b/hdf/util/he_disp.c
@@ -41,7 +41,7 @@ HEdisplay(HE_CMD * cmd)
                       printf("display [-position <xpos> <ypos>] [-expansion <exp>] [-large]\n");
                       printf("\t-position\tImage position on console screen\n");
                       printf("\t-expansion\tImage expansion factor\n");
-                      printf("\t-large\t\tMake image as large as posible\n");
+                      printf("\t-large\t\tMake image as large as possible\n");
                       return HE_OK;
                   case HE_POSITION:
                       center = 0;
--- a/hdf/test/chunks.c
+++ b/hdf/test/chunks.c
@@ -1382,7 +1382,7 @@ test_chunks(void)
 
 
     /* The following tests will work if Number type conversion
-       is done on the ouput data, punt for now since 'hdftest'
+       is done on the output data, punt for now since 'hdftest'
        tests these same tests with number type conversion  */
 
     /* 
--- a/mfhdf/dumper/hdp_vd.c
+++ b/mfhdf/dumper/hdp_vd.c
@@ -999,7 +999,7 @@ dvd(dump_info_t * dumpvd_opts,
 
              break;
           default:
-             printf("dumping vdata, unknown ouput file option \n");
+             printf("dumping vdata, unknown output file option \n");
              ret_value = FAIL;
       }    /* switch for output file   */
 
--- a/mfhdf/hrepack/hrepack_an.c
+++ b/mfhdf/hrepack/hrepack_an.c
@@ -190,7 +190,7 @@ int copy_an_data(int32 infile_id,
             continue;
         }
         if((ann_length = ANannlen(ann_id))==FAIL) {
-            printf( "Failed to get AN %d lenght of <%s>\n", i, path);
+            printf( "Failed to get AN %d length of <%s>\n", i, path);
             continue;
         }
         
--- a/mfhdf/hrepack/hrepack_list.c
+++ b/mfhdf/hrepack/hrepack_list.c
@@ -432,7 +432,7 @@ int list_vg(int32 infile_id,
 	    /* Get vgroup's name */
             if (Vgetnamelen(vg_id, &name_len)==FAIL)
             {
-                printf("Error: Could not get name lenght for group with ref <%ld>\n", ref);
+                printf("Error: Could not get name length for group with ref <%ld>\n", ref);
                 goto out;
             }
             vg_name = (char *) HDmalloc(sizeof(char) * (name_len+1));
@@ -447,7 +447,7 @@ int list_vg(int32 infile_id,
 	    /* Get vgroup's class name */
             if (Vgetclassnamelen(vg_id, &name_len)==FAIL)
             {
-                printf("Error: Could not get name lenght for group with ref <%ld>\n", ref);
+                printf("Error: Could not get name length for group with ref <%ld>\n", ref);
                 goto out;
             }
 
@@ -692,7 +692,7 @@ int vgroup_insert(int32 infile_id,
 	    /* Get vgroup's name */
             if (Vgetnamelen(vg_id, &name_len)==FAIL)
             {
-                printf("Error: Could not get name lenght for group with ref <%ld>\n", ref);
+                printf("Error: Could not get name length for group with ref <%ld>\n", ref);
                 goto out;
             }
             vg_name = (char *) HDmalloc(sizeof(char) * (name_len+1));
@@ -706,7 +706,7 @@ int vgroup_insert(int32 infile_id,
 	    /* Get vgroup's class name */
             if (Vgetclassnamelen(vg_id, &name_len)==FAIL)
             {
-                printf("Error: Could not get name lenght for group with ref <%ld>\n", ref);
+                printf("Error: Could not get name length for group with ref <%ld>\n", ref);
                 goto out;
             }
 
--- a/mfhdf/hrepack/hrepacktst.c
+++ b/mfhdf/hrepack/hrepacktst.c
@@ -73,8 +73,8 @@
  *-------------------------------------------------------------------------
  */ 
 
-static int            g_lenght_x;
-static int            g_lenght_y;
+static int            g_length_x;
+static int            g_length_y;
 static int            g_ncomps;
 static unsigned char *g_image_data = NULL;   
 
@@ -122,8 +122,8 @@ int read_data(const char* fname)
     
     /* globals */
     g_ncomps=color_planes;
-    g_lenght_y=h;
-    g_lenght_x=w;
+    g_length_y=h;
+    g_length_x=w;
     
     if ( g_image_data != NULL )
     {
@@ -991,8 +991,8 @@ int add_gr_ffile(const char* name_file,
     {
         /* set the data type, interlace mode, and dimensions of the image */
         data_type = DFNT_UINT8;
-        dim_gr[0] = g_lenght_x;
-        dim_gr[1] = g_lenght_y;
+        dim_gr[0] = g_length_x;
+        dim_gr[1] = g_length_y;
         
         /* create the raster image array */
         if ((ri_id = GRcreate (gr_id, gr_name, g_ncomps, data_type, interlace_mode, dim_gr))== FAIL)
@@ -1003,8 +1003,8 @@ int add_gr_ffile(const char* name_file,
         
         /* define the size of the data to be written */
         start[0] = start[1] = 0;
-        edges[0] = g_lenght_x;
-        edges[1] = g_lenght_y;
+        edges[0] = g_length_x;
+        edges[1] = g_length_y;
         
         
         /* write the data in the buffer into the image array */
@@ -1350,7 +1350,7 @@ int add_r8(const char* image_file,
         }
         
         /* write the image */
-        if (DFR8addimage(fname, g_image_data, g_lenght_x, g_lenght_y, (uint16)0)==FAIL){
+        if (DFR8addimage(fname, g_image_data, g_length_x, g_length_y, (uint16)0)==FAIL){
             printf( "Could not write palette for image\n");
             return FAIL;
         }
@@ -1425,7 +1425,7 @@ int add_r24(const char* image_file,
         }
         
         /* write the image */
-        if (DF24addimage(fname, g_image_data, g_lenght_x, g_lenght_y)==FAIL){
+        if (DF24addimage(fname, g_image_data, g_length_x, g_length_y)==FAIL){
             printf( "Could not write image\n");
             return FAIL;
         }
--- a/mfhdf/hrepack/hrepack_dim.c
+++ b/mfhdf/hrepack/hrepack_dim.c
@@ -462,7 +462,7 @@ static int gen_dim(char* name,
         
         
        /*-------------------------------------------------------------------------
-        * check for maximum number of chunks treshold
+        * check for maximum number of chunks threshold
         *-------------------------------------------------------------------------
         */
         if ( options->trip>0 ) 
--- a/mfhdf/hrepack/hrepack_main.c
+++ b/mfhdf/hrepack/hrepack_main.c
@@ -86,7 +86,7 @@ int main(int argc, char **argv)
             
             options.threshold = parse_number(argv[i+1]);
             if (options.threshold==-1) {
-                printf("Error: Invalid treshold size <%s>\n",argv[i+1]);
+                printf("Error: Invalid threshold size <%s>\n",argv[i+1]);
                 goto out;
             }
             ++i;
--- a/mfhdf/hrepack/hrepack_sds.c
+++ b/mfhdf/hrepack/hrepack_sds.c
@@ -334,7 +334,7 @@ int copy_sds(int32 sd_in,
         
         
        /*-------------------------------------------------------------------------
-        * check for maximum number of chunks treshold
+        * check for maximum number of chunks threshold
         *-------------------------------------------------------------------------
         */
         if ( options->trip>0 ) 
--- a/mfhdf/ncdump/ncdump.1
+++ b/mfhdf/ncdump/ncdump.1
@@ -97,7 +97,7 @@ this name from the last component of the
 by stripping off any extension it has.  Use the \fB-n\fP option to specify a
 different name.  Although the output file name used by \fBncgen -b\fP can be
 specified, it may be wise to have \fIncdump\fP change the default name to
-avoid inadvertantly overwriting a valuable netCDF file when using
+avoid inadvertently overwriting a valuable netCDF file when using
 \fBncdump\fP, editing the resulting CDL file, and using \fBncgen -b\fP to
 generate a new netCDF file from the edited CDL file.
 .IP "\fB-d\fP \fIfloat_digits[,double_digits]\fP"
--- a/hdf/src/herr.h
+++ b/hdf/src/herr.h
@@ -159,7 +159,7 @@ typedef enum
       DFE_PUTELEM,              /* Hputelement failed in some way */
       DFE_GETELEM,              /* Hgetelement failed in some way */
       DFE_CANTLINK,             /* Can't initialize link information */
-      DFE_CANTSYNC,             /* Cannot syncronize memory with file */
+      DFE_CANTSYNC,             /* Cannot synchronize memory with file */
 
 /* Old group interface errors */
       DFE_BADGROUP,             /* Error from DFdiread in opening a group */
@@ -359,7 +359,7 @@ PRIVATE const struct error_messages_t er
     {DFE_PUTELEM,       "Hputelement failed in some way"},
     {DFE_GETELEM,       "Hgetelement failed in some way"},
     {DFE_CANTLINK,      "Can't initialize link information"},
-    {DFE_CANTSYNC,      "Cannot syncronize memory with file"},
+    {DFE_CANTSYNC,      "Cannot synchronize memory with file"},
 
 /* Old group interface errors */
     {DFE_BADGROUP,      "Error from DFdiread in opening a group"},
--- a/hdf/src/hfiledd.c
+++ b/hdf/src/hfiledd.c
@@ -61,8 +61,8 @@ EXPORTED ROUTINES
   DD list functions:
     HTPstart    - Initialize the DD list from disk (creates the DD list in memory)
     HTPinit     - Create a new DD list (creates the DD list in memory)
-    HTPsync     - Flush the DD list to disk (syncronizes with disk)
-    HTPend      - Close the DD list to disk (syncronizes with disk too)
+    HTPsync     - Flush the DD list to disk (synchronizes with disk)
+    HTPend      - Close the DD list to disk (synchronizes with disk too)
 LOCAL ROUTINES
     HTIfind_dd      - find a specific DD in the file
     HTInew_dd_block - create a new (empty) DD block
--- a/hdf/src/mcache.c
+++ b/hdf/src/mcache.c
@@ -500,7 +500,7 @@ mcache_get(
     /* Check for attempting to retrieve a non-existent page. 
      *  remember pages go from 1 ->npages  */
     if (pgno > mp->npages) 
-        HE_REPORT_GOTO("attempting to get a non existant page from cache", FAIL);
+        HE_REPORT_GOTO("attempting to get a non existent page from cache", FAIL);
 
 #ifdef STATISTICS
     ++mp->pageget;
@@ -876,7 +876,7 @@ mcache_page_sync(
     /* Check for attempting to sync a non-existent page. 
      *  remember pages go from 1 ->npages  */
     if (pgno > mp->npages) 
-        HE_REPORT_GOTO("attempting to get a non existant page from cache", FAIL);
+        HE_REPORT_GOTO("attempting to get a non existent page from cache", FAIL);
 
     /* Check for a page that is cached. */
     if ((bp = mcache_look(mp, pgno)) != NULL) 
@@ -1172,7 +1172,7 @@ mcache_look(
 
     /* Check for attempt to look up a non-existent page. */
     if (pgno > mp->npages) 
-        HE_REPORT_GOTO("attempting to get a non existant page from cache", FAIL);
+        HE_REPORT_GOTO("attempting to get a non existent page from cache", FAIL);
 
     /* search through hash chain */
     head = &mp->hqh[HASHKEY(pgno)];
--- a/hdf/test/file.c
+++ b/hdf/test/file.c
@@ -161,7 +161,7 @@ test_hfile(void)
     ret = Hnextread(aid1, 100, DFREF_WILDCARD, DF_CURRENT);
     if (ret != FAIL)
       {
-          fprintf(stderr, "ERROR: Found a non-existant element at line %d\n",
+          fprintf(stderr, "ERROR: Found a non-existent element at line %d\n",
                   __LINE__);
           errors++;
       }
@@ -176,7 +176,7 @@ test_hfile(void)
     ret = Hnextread(aid1, DFTAG_WILDCARD, 3, DF_CURRENT);
     if (ret != FAIL)
       {
-          fprintf(stderr, "ERROR: Found a non-existant element at line %d\n",
+          fprintf(stderr, "ERROR: Found a non-existent element at line %d\n",
                   __LINE__);
           errors++;
       }
--- a/mfhdf/nctest/atttests.c
+++ b/mfhdf/nctest/atttests.c
@@ -593,7 +593,7 @@ test_ncattget(path)
     }
     /* try getting non-existent attribute, should fail */
     if (ncattget(cdfid, uu_id, "nonesuch", vmax.val) != -1) {
-	error("%s: ncattget should fail with nonexistant attribute", pname);
+	error("%s: ncattget should fail with nonexistent attribute", pname);
 	ncclose(cdfid); return;
     }
     if (ncclose (cdfid) == -1) {
--- a/mfhdf/test/hdftest.c
+++ b/mfhdf/test/hdftest.c
@@ -444,7 +444,7 @@ main(int argc, char *argv[])
     status = SDfindattr(newsds, "blarf");
     if(status != FAIL) 
       {
-        fprintf(stderr, "SDfindattr found non-existant attribute\n");
+        fprintf(stderr, "SDfindattr found non-existent attribute\n");
         num_errs++;
       }
 
--- a/hdf/util/hdf8to24.c
+++ b/hdf/util/hdf8to24.c
@@ -266,7 +266,7 @@ main(int argc, char *argv[])
             }   /* end if */
       }     /* end if */
     else
-        printf("No palette associated with image, using default grey scale converion\n");
+        printf("No palette associated with image, using default grey scale conversion\n");
 
     if (DFR8getimage(argv[file], img_buf, xdim, ydim, (ispal ? pal_buf : NULL)) == FAIL)
       {
